{
	"jtest": {
		"prefix": "jtest",
		"body": [
			"// region:    ---Tests",
			"#[cfg(test)]",
			"mod tests {",
			"    #![allow(unused)]",
			"    use super::*;",
			"    use anyhow::Result;",
			"${1}",
			"",
			"}",
			"// endregion: ---Tests"
		],
		"description": "jtest"
	},
	"jerr": {
		"prefix": "jerr",
		"body": [
			"pub type Result<T> = core::result::Result<T, Error>;",
			"",
			"#[derive(Debug)]",
			"pub enum Error {",
			"",
			"",
			"}",
			"",
			"// region:    --- Error Boilerplate",
			"impl core::fmt::Display for Error {",
			"   fn fmt(",
			"       &self,",
			"       fmt: &mut core::fmt::Formatter,",
			"   ) -> core::result::Result<(), core::fmt::Error> {",
			"       write!(fmt, '{self:?}')",
			"   }",
			"}",
            "",
            "impl std::error::Error for Error {}",
			"// endregion: --- Error Boilerplate"
		],
		"description": "jtest"

	}
}
